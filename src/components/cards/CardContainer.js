import CardList from "./CardList";
import { useState, useEffect } from "react";
import axios from "axios";
import { DragDropContext } from "react-beautiful-dnd";
import { useLocation } from "react-router-dom";

const CardContainer = () => {
  const [neutralCards, setNeutralCards] = useState([]);
  const [loading, setLoading] = useState(false);
  const url = useLocation().pathname;
  const lst = url.split("/");
  const groupName = lst[1];
  const quesiton = lst[2];

  useEffect(() => {
    axios
      .get("/cards/get", {
        params: {
          questionGroupName: groupName,
          questions: quesiton,
        },
      })
      .then((res) => {
        const cards = res.data;
        cards.forEach((card) => {
          setNeutralCards((neutralCards) => [...neutralCards, card]);
        });
        setLoading(true);
      })
      .catch((err) => console.log(err));
  }, [groupName, quesiton]);

  let onDragEnd = (result) => {
    console.log(result);

    if (!result.destination) {
      return;
    }

    if (
      result.destination.droppableId === "neutral-cards" &&
        result.source.droppableId === "neutral-cards"
    ) {
      const oldIndex = result.source.index-1;
      const newOrder = [...neutralCards.slice(0, oldIndex),
                        ...neutralCards.slice(oldIndex+1),
                        neutralCards[oldIndex]];
      setNeutralCards(newOrder);


      // Send the message generated by a `Move` object.
      // See Issue: https://github.com/Graner007/moving-motivators-frontend-react/issues/25
    }
  };

  return (
    <DragDropContext onDragEnd={onDragEnd}>
      <div className="card-container">
        {loading && (
          <CardList
            cards={neutralCards}
            className="cards neutral-cards"
            droppableId="neutral-cards"
          />
        )}
      </div>
    </DragDropContext>
  );
};

export default CardContainer;
